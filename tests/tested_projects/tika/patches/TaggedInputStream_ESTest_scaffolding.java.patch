diff --git a/tika-core/src/test/java/org/apache/tika/io/TaggedInputStream_ESTest_scaffolding.java b/tika-core/src/test/java/org/apache/tika/io/TaggedInputStream_ESTest_scaffolding.java
new file mode 100644
index 000000000..e8a21ed93
--- /dev/null
+++ b/tika-core/src/test/java/org/apache/tika/io/TaggedInputStream_ESTest_scaffolding.java
@@ -0,0 +1,110 @@
+/**
+ * Scaffolding file used to store all the setups needed to run 
+ * tests automatically generated by EvoSuite
+ * Sun Aug 11 13:42:41 GMT 2019
+ */
+
+package org.apache.tika.io;
+
+import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
+import org.junit.BeforeClass;
+import org.junit.Before;
+import org.junit.After;
+import org.junit.AfterClass;
+import org.evosuite.runtime.sandbox.Sandbox;
+import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
+
+import static org.evosuite.shaded.org.mockito.Mockito.*;
+@EvoSuiteClassExclude
+public class TaggedInputStream_ESTest_scaffolding {
+
+  @org.junit.Rule 
+  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
+
+  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
+
+  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
+
+
+  @BeforeClass 
+  public static void initEvoSuiteFramework() { 
+    org.evosuite.runtime.RuntimeSettings.className = "org.apache.tika.io.TaggedInputStream"; 
+    org.evosuite.runtime.GuiSupport.initialize(); 
+    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
+    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
+    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
+    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
+    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
+    org.evosuite.runtime.classhandling.JDKClassResetter.init();
+    setSystemProperties();
+    initializeClasses();
+    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
+    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
+  } 
+
+  @AfterClass 
+  public static void clearEvoSuiteFramework(){ 
+    Sandbox.resetDefaultSecurityManager(); 
+    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
+  } 
+
+  @Before 
+  public void initTestCase(){ 
+    threadStopper.storeCurrentThreads();
+    threadStopper.startRecordingTime();
+    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
+    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
+    setSystemProperties(); 
+    org.evosuite.runtime.GuiSupport.setHeadless(); 
+    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
+    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
+  } 
+
+  @After 
+  public void doneWithTestCase(){ 
+    threadStopper.killAndJoinClientThreads();
+    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
+    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
+    resetClasses(); 
+    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
+    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
+    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
+  } 
+
+  public static void setSystemProperties() {
+ 
+    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
+    java.lang.System.setProperty("file.encoding", "Cp1252"); 
+    java.lang.System.setProperty("java.awt.headless", "true"); 
+    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\rotem\\AppData\\Local\\Temp\\"); 
+    java.lang.System.setProperty("user.country", "US"); 
+    java.lang.System.setProperty("user.dir", "C:\\Code\\Lab\\BugMiner\\tests\\tested_project\\tika\\tika-core"); 
+    java.lang.System.setProperty("user.home", "C:\\Users\\rotem"); 
+    java.lang.System.setProperty("user.language", "en"); 
+    java.lang.System.setProperty("user.name", "rotem"); 
+    java.lang.System.setProperty("user.timezone", "Asia/Jerusalem"); 
+  }
+
+  private static void initializeClasses() {
+    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TaggedInputStream_ESTest_scaffolding.class.getClassLoader() ,
+      "org.apache.tika.io.ProxyInputStream",
+      "org.apache.tika.io.TaggedIOException",
+      "org.apache.tika.io.TaggedInputStream",
+      "org.apache.tika.io.IOExceptionWithCause"
+    );
+  } 
+  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
+    mock(Class.forName("java.util.Enumeration", false, TaggedInputStream_ESTest_scaffolding.class.getClassLoader()));
+  }
+
+  private static void resetClasses() {
+    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TaggedInputStream_ESTest_scaffolding.class.getClassLoader()); 
+
+    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
+      "org.apache.tika.io.ProxyInputStream",
+      "org.apache.tika.io.TaggedInputStream",
+      "org.apache.tika.io.IOExceptionWithCause",
+      "org.apache.tika.io.TaggedIOException"
+    );
+  }
+}
