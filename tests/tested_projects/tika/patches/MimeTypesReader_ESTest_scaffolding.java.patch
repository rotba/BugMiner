diff --git a/tika-core/src/test/java/org/apache/tika/mime/MimeTypesReader_ESTest_scaffolding.java b/tika-core/src/test/java/org/apache/tika/mime/MimeTypesReader_ESTest_scaffolding.java
new file mode 100644
index 000000000..ed8361044
--- /dev/null
+++ b/tika-core/src/test/java/org/apache/tika/mime/MimeTypesReader_ESTest_scaffolding.java
@@ -0,0 +1,326 @@
+/**
+ * Scaffolding file used to store all the setups needed to run 
+ * tests automatically generated by EvoSuite
+ * Wed Aug 14 13:45:38 GMT 2019
+ */
+
+package org.apache.tika.mime;
+
+import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
+import org.junit.BeforeClass;
+import org.junit.Before;
+import org.junit.After;
+import org.junit.AfterClass;
+import org.evosuite.runtime.sandbox.Sandbox;
+import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
+
+@EvoSuiteClassExclude
+public class MimeTypesReader_ESTest_scaffolding {
+
+  @org.junit.Rule 
+  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
+
+  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
+
+  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
+
+
+  @BeforeClass 
+  public static void initEvoSuiteFramework() { 
+    org.evosuite.runtime.RuntimeSettings.className = "org.apache.tika.mime.MimeTypesReader"; 
+    org.evosuite.runtime.GuiSupport.initialize(); 
+    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
+    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
+    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
+    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
+    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
+    org.evosuite.runtime.classhandling.JDKClassResetter.init();
+    setSystemProperties();
+    initializeClasses();
+    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
+  } 
+
+  @AfterClass 
+  public static void clearEvoSuiteFramework(){ 
+    Sandbox.resetDefaultSecurityManager(); 
+    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
+  } 
+
+  @Before 
+  public void initTestCase(){ 
+    threadStopper.storeCurrentThreads();
+    threadStopper.startRecordingTime();
+    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
+    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
+    setSystemProperties(); 
+    org.evosuite.runtime.GuiSupport.setHeadless(); 
+    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
+    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
+  } 
+
+  @After 
+  public void doneWithTestCase(){ 
+    threadStopper.killAndJoinClientThreads();
+    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
+    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
+    resetClasses(); 
+    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
+    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
+    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
+  } 
+
+  public static void setSystemProperties() {
+ 
+    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
+    java.lang.System.setProperty("file.encoding", "Cp1252"); 
+    java.lang.System.setProperty("java.awt.headless", "true"); 
+    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\rotem\\AppData\\Local\\Temp\\"); 
+    java.lang.System.setProperty("user.country", "US"); 
+    java.lang.System.setProperty("user.dir", "C:\\Code\\Lab\\BugMiner\\tests\\tested_project\\tika"); 
+    java.lang.System.setProperty("user.home", "C:\\Users\\rotem"); 
+    java.lang.System.setProperty("user.language", "en"); 
+    java.lang.System.setProperty("user.name", "rotem"); 
+    java.lang.System.setProperty("user.timezone", "Asia/Jerusalem"); 
+  }
+
+  private static void initializeClasses() {
+    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MimeTypesReader_ESTest_scaffolding.class.getClassLoader() ,
+      "org.apache.html.dom.HTMLLinkElementImpl",
+      "org.apache.html.dom.HTMLPreElementImpl",
+      "org.apache.html.dom.HTMLHRElementImpl",
+      "org.apache.wml.WMLPostfieldElement",
+      "org.apache.tika.mime.MediaTypeRegistry",
+      "org.apache.html.dom.ObjectFactory",
+      "org.apache.html.dom.HTMLOptGroupElementImpl",
+      "org.apache.wml.WMLDocument",
+      "org.apache.tika.metadata.TikaMetadataKeys",
+      "org.apache.wml.dom.WMLUElementImpl",
+      "org.apache.wml.dom.WMLEmElementImpl",
+      "org.apache.wml.WMLOptionElement",
+      "org.apache.tika.metadata.Metadata",
+      "org.apache.tika.metadata.Property",
+      "org.apache.html.dom.SecuritySupport",
+      "org.apache.wml.dom.WMLBElementImpl",
+      "org.apache.wml.dom.WMLTableElementImpl",
+      "org.apache.wml.WMLPElement",
+      "org.apache.html.dom.HTMLTableRowElementImpl",
+      "org.apache.html.dom.HTMLButtonElementImpl",
+      "org.apache.wml.dom.WMLPrevElementImpl",
+      "org.apache.html.dom.HTMLModElementImpl",
+      "org.apache.wml.WMLSmallElement",
+      "org.apache.wml.WMLUElement",
+      "org.apache.html.dom.HTMLTextAreaElementImpl",
+      "org.apache.wml.WMLIElement",
+      "org.apache.html.dom.HTMLHeadingElementImpl",
+      "org.apache.html.dom.HTMLDListElementImpl",
+      "org.apache.html.dom.HTMLLIElementImpl",
+      "org.apache.html.dom.HTMLFrameSetElementImpl",
+      "org.apache.wml.dom.WMLDocumentImpl",
+      "org.apache.wml.dom.WMLAccessElementImpl",
+      "org.apache.html.dom.HTMLBodyElementImpl",
+      "org.apache.wml.dom.WMLHeadElementImpl",
+      "org.apache.html.dom.HTMLBRElementImpl",
+      "org.apache.wml.WMLCardElement",
+      "org.apache.html.dom.HTMLIFrameElementImpl",
+      "org.apache.wml.dom.WMLIElementImpl",
+      "org.apache.tika.metadata.Geographic",
+      "org.apache.wml.WMLOneventElement",
+      "org.apache.html.dom.HTMLTableElementImpl",
+      "org.apache.html.dom.HTMLTableSectionElementImpl",
+      "org.apache.wml.WMLNoopElement",
+      "org.apache.wml.WMLBrElement",
+      "org.apache.html.dom.HTMLHeadElementImpl",
+      "org.apache.html.dom.HTMLLegendElementImpl",
+      "org.apache.wml.WMLGoElement",
+      "org.apache.wml.dom.WMLNoopElementImpl",
+      "org.apache.wml.dom.WMLTimerElementImpl",
+      "org.apache.wml.dom.WMLOptionElementImpl",
+      "org.apache.html.dom.HTMLFontElementImpl",
+      "org.apache.html.dom.HTMLElementImpl",
+      "org.apache.tika.metadata.CreativeCommons",
+      "org.apache.tika.mime.MediaType",
+      "org.apache.wml.WMLEmElement",
+      "org.apache.html.dom.HTMLQuoteElementImpl",
+      "org.apache.tika.mime.Clause",
+      "org.apache.html.dom.HTMLDocumentImpl",
+      "org.apache.tika.exception.TikaException",
+      "org.apache.tika.mime.Magic",
+      "org.apache.wml.WMLElement",
+      "org.apache.wml.WMLAElement",
+      "org.apache.wml.dom.WMLImgElementImpl",
+      "org.apache.wml.WMLStrongElement",
+      "org.apache.html.dom.HTMLScriptElementImpl",
+      "org.apache.html.dom.HTMLParamElementImpl",
+      "org.apache.wml.dom.WMLDoElementImpl",
+      "org.apache.html.dom.HTMLBaseElementImpl",
+      "org.apache.wml.dom.WMLSmallElementImpl",
+      "org.apache.tika.metadata.TIFF",
+      "org.apache.wml.dom.WMLGoElementImpl",
+      "org.apache.wml.WMLTimerElement",
+      "org.apache.wml.WMLImgElement",
+      "org.apache.tika.detect.Detector",
+      "org.apache.html.dom.HTMLMenuElementImpl",
+      "org.apache.html.dom.HTMLFormControl",
+      "org.apache.html.dom.HTMLFieldSetElementImpl",
+      "org.apache.wml.dom.WMLSetvarElementImpl",
+      "org.apache.html.dom.HTMLTableCellElementImpl",
+      "org.apache.wml.WMLSetvarElement",
+      "org.apache.wml.WMLBigElement",
+      "org.apache.html.dom.HTMLOptionElementImpl",
+      "org.apache.wml.WMLSelectElement",
+      "org.apache.tika.mime.MimeTypesReader",
+      "org.apache.html.dom.HTMLFrameElementImpl",
+      "org.apache.tika.mime.MimeTypeException",
+      "org.apache.wml.dom.WMLSelectElementImpl",
+      "org.apache.tika.mime.MimeType",
+      "org.apache.html.dom.HTMLDirectoryElementImpl",
+      "org.apache.wml.WMLTemplateElement",
+      "org.apache.wml.dom.WMLTemplateElementImpl",
+      "org.apache.html.dom.HTMLTableCaptionElementImpl",
+      "org.apache.html.dom.HTMLObjectElementImpl",
+      "org.apache.html.dom.CollectionIndex",
+      "org.apache.html.dom.HTMLFormElementImpl",
+      "org.apache.wml.WMLDoElement",
+      "org.apache.wml.dom.WMLFieldsetElementImpl",
+      "org.apache.wml.dom.WMLBigElementImpl",
+      "org.apache.html.dom.HTMLDivElementImpl",
+      "org.apache.html.dom.HTMLSelectElementImpl",
+      "org.apache.wml.dom.WMLOptgroupElementImpl",
+      "org.apache.tika.metadata.ClimateForcast",
+      "org.apache.html.dom.HTMLAppletElementImpl",
+      "org.apache.html.dom.HTMLMetaElementImpl",
+      "org.apache.tika.mime.MimeType$RootXML",
+      "org.apache.tika.metadata.Property$ValueType",
+      "org.apache.wml.dom.WMLPostfieldElementImpl",
+      "org.apache.tika.mime.MimeTypesReaderMetKeys",
+      "org.apache.wml.dom.WMLRefreshElementImpl",
+      "org.apache.wml.WMLWmlElement",
+      "org.apache.wml.WMLTdElement",
+      "org.apache.html.dom.HTMLStyleElementImpl",
+      "org.apache.wml.WMLMetaElement",
+      "org.apache.html.dom.HTMLHtmlElementImpl",
+      "org.apache.html.dom.HTMLImageElementImpl",
+      "org.apache.html.dom.HTMLInputElementImpl",
+      "org.apache.wml.dom.WMLMetaElementImpl",
+      "org.apache.html.dom.HTMLAnchorElementImpl",
+      "org.apache.html.dom.HTMLMapElementImpl",
+      "org.apache.tika.metadata.DublinCore",
+      "org.apache.wml.dom.WMLInputElementImpl",
+      "org.apache.html.dom.HTMLOListElementImpl",
+      "org.apache.wml.dom.WMLBrElementImpl",
+      "org.apache.wml.dom.WMLOneventElementImpl",
+      "org.apache.wml.dom.WMLAElementImpl",
+      "org.apache.wml.dom.WMLPElementImpl",
+      "org.apache.html.dom.HTMLUListElementImpl",
+      "org.apache.html.dom.HTMLIsIndexElementImpl",
+      "org.apache.wml.dom.WMLElementImpl",
+      "org.apache.html.dom.ObjectFactory$ConfigurationError",
+      "org.apache.wml.dom.WMLWmlElementImpl",
+      "org.apache.tika.metadata.Property$PropertyType",
+      "org.apache.tika.mime.Patterns$LengthComparator",
+      "org.apache.wml.WMLInputElement",
+      "org.apache.wml.WMLPrevElement",
+      "org.apache.html.dom.SecuritySupport$4",
+      "org.apache.html.dom.HTMLLabelElementImpl",
+      "org.apache.wml.WMLAnchorElement",
+      "org.apache.html.dom.HTMLTableColElementImpl",
+      "org.apache.wml.dom.WMLTdElementImpl",
+      "org.apache.tika.mime.Patterns",
+      "org.apache.wml.WMLAccessElement",
+      "org.apache.html.dom.HTMLParagraphElementImpl",
+      "org.apache.html.dom.HTMLTitleElementImpl",
+      "org.apache.html.dom.HTMLAreaElementImpl",
+      "org.apache.wml.WMLTrElement",
+      "org.apache.wml.WMLFieldsetElement",
+      "org.apache.wml.WMLBElement",
+      "org.apache.wml.WMLRefreshElement",
+      "org.apache.tika.metadata.Message",
+      "org.apache.html.dom.HTMLBaseFontElementImpl",
+      "org.apache.wml.WMLOptgroupElement",
+      "org.apache.wml.WMLTableElement",
+      "org.apache.tika.metadata.TikaMimeKeys",
+      "org.apache.wml.dom.WMLCardElementImpl",
+      "org.apache.tika.metadata.MSOffice",
+      "org.apache.wml.WMLHeadElement",
+      "org.apache.html.dom.HTMLCollectionImpl",
+      "org.apache.tika.mime.MimeTypes",
+      "org.apache.wml.dom.WMLAnchorElementImpl",
+      "org.apache.tika.metadata.PropertyTypeException",
+      "org.apache.wml.dom.WMLTrElementImpl",
+      "org.apache.tika.metadata.HttpHeaders",
+      "org.apache.wml.dom.WMLStrongElementImpl"
+    );
+  } 
+
+  private static void resetClasses() {
+    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MimeTypesReader_ESTest_scaffolding.class.getClassLoader()); 
+
+    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
+      "org.apache.tika.mime.MimeTypesReader",
+      "org.apache.tika.mime.MediaType",
+      "org.apache.tika.mime.MimeTypes",
+      "org.apache.tika.mime.MediaTypeRegistry",
+      "org.apache.tika.mime.Patterns",
+      "org.apache.tika.mime.Patterns$LengthComparator",
+      "org.apache.tika.mime.MimeType",
+      "org.apache.tika.metadata.Metadata",
+      "org.apache.tika.exception.TikaException",
+      "org.apache.tika.mime.MimeTypeException",
+      "org.apache.html.dom.HTMLDocumentImpl",
+      "org.apache.html.dom.SecuritySupport",
+      "org.apache.html.dom.SecuritySupport$4",
+      "org.apache.html.dom.ObjectFactory",
+      "org.apache.html.dom.HTMLElementImpl",
+      "org.apache.html.dom.HTMLIFrameElementImpl",
+      "org.apache.html.dom.HTMLObjectElementImpl",
+      "org.apache.wml.dom.WMLElementImpl",
+      "org.apache.wml.dom.WMLBElementImpl",
+      "org.apache.wml.dom.WMLNoopElementImpl",
+      "org.apache.wml.dom.WMLAElementImpl",
+      "org.apache.wml.dom.WMLSetvarElementImpl",
+      "org.apache.wml.dom.WMLAccessElementImpl",
+      "org.apache.wml.dom.WMLStrongElementImpl",
+      "org.apache.wml.dom.WMLPostfieldElementImpl",
+      "org.apache.wml.dom.WMLDoElementImpl",
+      "org.apache.wml.dom.WMLWmlElementImpl",
+      "org.apache.wml.dom.WMLTrElementImpl",
+      "org.apache.wml.dom.WMLGoElementImpl",
+      "org.apache.wml.dom.WMLBigElementImpl",
+      "org.apache.wml.dom.WMLAnchorElementImpl",
+      "org.apache.wml.dom.WMLTimerElementImpl",
+      "org.apache.wml.dom.WMLSmallElementImpl",
+      "org.apache.wml.dom.WMLOptgroupElementImpl",
+      "org.apache.wml.dom.WMLHeadElementImpl",
+      "org.apache.wml.dom.WMLTdElementImpl",
+      "org.apache.wml.dom.WMLFieldsetElementImpl",
+      "org.apache.wml.dom.WMLImgElementImpl",
+      "org.apache.wml.dom.WMLRefreshElementImpl",
+      "org.apache.wml.dom.WMLOneventElementImpl",
+      "org.apache.wml.dom.WMLInputElementImpl",
+      "org.apache.wml.dom.WMLPrevElementImpl",
+      "org.apache.wml.dom.WMLTableElementImpl",
+      "org.apache.wml.dom.WMLMetaElementImpl",
+      "org.apache.wml.dom.WMLTemplateElementImpl",
+      "org.apache.wml.dom.WMLBrElementImpl",
+      "org.apache.wml.dom.WMLOptionElementImpl",
+      "org.apache.wml.dom.WMLUElementImpl",
+      "org.apache.wml.dom.WMLPElementImpl",
+      "org.apache.wml.dom.WMLSelectElementImpl",
+      "org.apache.wml.dom.WMLEmElementImpl",
+      "org.apache.wml.dom.WMLIElementImpl",
+      "org.apache.wml.dom.WMLCardElementImpl",
+      "org.apache.wml.dom.WMLDocumentImpl",
+      "org.apache.tika.metadata.Property",
+      "org.apache.tika.metadata.Property$ValueType",
+      "org.apache.tika.metadata.Property$PropertyType",
+      "org.apache.html.dom.HTMLFrameElementImpl",
+      "org.apache.html.dom.HTMLAnchorElementImpl",
+      "org.apache.html.dom.HTMLHtmlElementImpl",
+      "org.apache.html.dom.HTMLMapElementImpl",
+      "org.apache.tika.mime.Magic",
+      "org.apache.html.dom.HTMLHeadElementImpl",
+      "org.apache.html.dom.HTMLCollectionImpl",
+      "org.apache.html.dom.HTMLBodyElementImpl"
+    );
+  }
+}
